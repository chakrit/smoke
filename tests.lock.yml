- name: tests.yml \ Builds
  commands:
    - command: go build -o ./bin/smoke -v .
      checks:
        - name: exitcode
          data:
            - "0"
    - command: ./bin/smoke
      checks:
        - name: exitcode
          data:
            - "1"
- name: tests.yml \ Basics \ Checks
  commands:
    - command: goimports -l *.go checks/*.go engine/*.go internal/p/*.go specs/*.go
      checks:
        - name: exitcode
          data:
            - "2"
        - name: stdout
          data:
            - ""
- name: tests.yml \ Basics \ Workdirs \ Current dir
  commands:
    - command: ls *.mod
      checks:
        - name: exitcode
          data:
            - "0"
        - name: stdout
          data:
            - go.mod
        - name: stderr
          data:
            - ""
- name: tests.yml \ Basics \ Workdirs \ One Dir
  commands:
    - command: ls ../*.mod
      checks:
        - name: exitcode
          data:
            - "0"
        - name: stdout
          data:
            - ../go.mod
        - name: stderr
          data:
            - ""
- name: tests.yml \ Basics \ Workdirs \ Two Dirs
  commands:
    - command: ls ../../*.mod
      checks:
        - name: exitcode
          data:
            - "0"
        - name: stdout
          data:
            - ../../go.mod
        - name: stderr
          data:
            - ""
- name: tests.yml \ Basics \ Workdirs \ Reversing \ One Dir
  commands:
    - command: ls ../*.mod
      checks:
        - name: exitcode
          data:
            - "0"
        - name: stdout
          data:
            - ../go.mod
        - name: stderr
          data:
            - ""
- name: tests.yml \ Basics \ Workdirs \ Reversing \ Two Dirs
  commands:
    - command: ls *.mod
      checks:
        - name: exitcode
          data:
            - "0"
        - name: stdout
          data:
            - go.mod
        - name: stderr
          data:
            - ""
- name: tests.yml \ Basics \ Unit Tests
  commands:
    - command: go test -v ./...
      checks:
        - name: exitcode
          data:
            - "0"
- name: tests.yml \ Basics \ Common Switches
  commands:
    - command: ./bin/smoke --time -qqqq -vvvv
      checks:
        - name: exitcode
          data:
            - "1"
- name: tests.yml \ Basics \ Loads
  commands:
    - command: ./bin/smoke --no-color --list tests.yml
      checks:
        - name: exitcode
          data:
            - "0"
        - name: stdout
          data:
            - tests.yml \ Builds
            - tests.yml \ Basics \ Checks
            - tests.yml \ Basics \ Workdirs \ Current dir
            - tests.yml \ Basics \ Workdirs \ One Dir
            - tests.yml \ Basics \ Workdirs \ Two Dirs
            - tests.yml \ Basics \ Workdirs \ Reversing \ One Dir
            - tests.yml \ Basics \ Workdirs \ Reversing \ Two Dirs
            - tests.yml \ Basics \ Unit Tests
            - tests.yml \ Basics \ Common Switches
            - tests.yml \ Basics \ Loads
            - tests.yml \ Tests \ Diff
            - tests.yml \ Tests \ Errors
            - tests.yml \ Tests \ I/O
            - tests.yml \ Tests \ Env
            - tests.yml \ Tests \ Include/Exclude \ Just Include
            - tests.yml \ Tests \ Include/Exclude \ Just Exclude
    - command: ./bin/smoke --no-color --list tests.yml -v
      checks:
        - name: exitcode
          data:
            - "0"
        - name: stdout
          data:
            - tests.yml \ Builds
            - "\tgo build -o ./bin/smoke -v ."
            - "\t./bin/smoke"
            - tests.yml \ Basics \ Checks
            - "\tgoimports -l *.go checks/*.go engine/*.go internal/p/*.go specs/*.go"
            - tests.yml \ Basics \ Workdirs \ Current dir
            - "\tls *.mod"
            - tests.yml \ Basics \ Workdirs \ One Dir
            - "\tls ../*.mod"
            - tests.yml \ Basics \ Workdirs \ Two Dirs
            - "\tls ../../*.mod"
            - tests.yml \ Basics \ Workdirs \ Reversing \ One Dir
            - "\tls ../*.mod"
            - tests.yml \ Basics \ Workdirs \ Reversing \ Two Dirs
            - "\tls *.mod"
            - tests.yml \ Basics \ Unit Tests
            - "\tgo test -v ./..."
            - tests.yml \ Basics \ Common Switches
            - "\t./bin/smoke --time -qqqq -vvvv"
            - tests.yml \ Basics \ Loads
            - "\t./bin/smoke --no-color --list tests.yml"
            - "\t./bin/smoke --no-color --list tests.yml -v"
            - tests.yml \ Tests \ Diff
            - "\t./bin/smoke --no-color badtests.yml"
            - tests.yml \ Tests \ Errors
            - "\tunknowncommand_asdfqwerzcxv"
            - tests.yml \ Tests \ I/O
            - "\tls"
            - tests.yml \ Tests \ Env
            - "\techo $YEAS_ITS"
            - tests.yml \ Tests \ Include/Exclude \ Just Include
            - "\t./bin/smoke --no-color -l -i hello badtests.yml"
            - "\t./bin/smoke --no-color -v -i hello badtests.yml"
            - tests.yml \ Tests \ Include/Exclude \ Just Exclude
            - "\t./bin/smoke --no-color -l -x Head -x Tail badtests.yml"
            - "\t./bin/smoke --no-color -v -x Head -x Tail badtests.yml"
- name: tests.yml \ Tests \ Diff
  commands:
    - command: ./bin/smoke --no-color badtests.yml
      checks:
        - name: exitcode
          data:
            - "1"
        - name: stdout
          data:
            - '    ==> badtests.yml \ hello'
            - '--- --> echo extraneous'
            - '---     stdout'
            - '---       extraneous'
            - +++ --> echo missing
            - +++     stdout
            - +++       missing
            - '    ==> badtests.yml \ lipsum \ Head'
            - '    --> head -22 badtests.txt | tail -9'
            - '        stdout'
            - '---       mixtape bushwick leggings affogato portland la croix direct
              trade biodiesel DIY readymade'
            - +++       fixie tousled deep v af lomo synth. Bushwick la croix ramps
              twee put a bird on it.
            - '          '
            - '          Man braid vinyl disrupt drinking vinegar cold-pressed knausgaard
              hashtag keytar pabst'
            - '           ... 3 line(s) skipped ...'
            - '          a bird on it. Ramps fanny pack humblebrag, leggings gochujang
              vexillologist echo park'
            - '          live-edge kitsch meditation offal hella swag lo-fi. Air plant
              lo-fi green juice mumblecore'
            - '---       fixie tousled deep v af lomo synth. Bushwick la croix ramps
              twee put a bird on it.'
            - +++       mixtape bushwick leggings affogato portland la croix direct
              trade biodiesel DIY readymade
            - '    ==> badtests.yml \ lipsum \ Tail'
            - '    --> tail -22 badtests.txt | head -9'
            - '        stdout'
            - '---       Biodiesel brooklyn pug whatever shaman semiotics bespoke
              kinfolk, synth blog. Pabst cloud'
            - +++       wolf moon vice aesthetic hot chicken banjo gochujang succulents
              marfa vape mlkshk forage
            - '          snackwave. Squid vaporware affogato, you probably haven''t
              heard of them snackwave raclette'
            - '          before they sold out roof party normcore hammock. Mustache
              meh man braid, tbh pug raclette'
            - '           ... 3 line(s) skipped ...'
            - '          keffiyeh blue bottle gochujang dreamcatcher.'
            - '          '
            - '---       wolf moon vice aesthetic hot chicken banjo gochujang succulents
              marfa vape mlkshk forage'
            - +++       Biodiesel brooklyn pug whatever shaman semiotics bespoke kinfolk,
              synth blog. Pabst cloud
            - ""
            - '  ✘ Changes Detected.'
        - name: stderr
          data:
            - ""
- name: tests.yml \ Tests \ Errors
  commands:
    - command: unknowncommand_asdfqwerzcxv
      checks:
        - name: exitcode
          data:
            - "127"
        - name: stdout
          data:
            - ""
        - name: stderr
          data:
            - '/bin/sh: line 1: unknowncommand_asdfqwerzcxv: command not found'
- name: tests.yml \ Tests \ I/O
  commands:
    - command: ls
      checks:
        - name: exitcode
          data:
            - "0"
        - name: stdout
          data:
            - funcs.go
            - print.go
        - name: stderr
          data:
            - ""
        - name: exitcode
          data:
            - "0"
        - name: ./internal/p/*.go
          data:
            - '-----BEGIN funcs.go-----'
            - package p
            - ""
            - import (
            - "\t\"fmt\""
            - "\t\"os\""
            - "\t\"strings\""
            - ""
            - "\t\"github.com/chakrit/smoke/engine\""
            - "\t\"github.com/chakrit/smoke/resultspecs\""
            - "\t\"github.com/mgutz/ansi\""
            - )
            - ""
            - // utility CLI logs
            - func Usage(s string)  { fmt.Fprintln(os.Stderr, s) }
            - func Bye()            { output(2, cLowkey+"exited."+cReset) }
            - func Error(err error) { output(-1, cError+"ERR "+err.Error()+cReset)
              }
            - func Action(s string) { output(1, cAction+"≋≋> "+strings.ToUpper(s)+cReset)
              }
            - ""
            - func Exit(err error) {
            - "\tError(err)"
            - "\tos.Exit(1)"
            - '}'
            - ""
            - // testing flow
            - func Test(t *engine.Test)                        { output(1, cTitle+"==>
              "+cTitleEm+t.Name+cReset) }
            - func Command(_ *engine.Test, cmd engine.Command) { output(2, cSubtitle+"-->
              "+string(cmd)+cReset) }
            - ""
            - func TestResult(_ engine.TestResult, err error) {
            - "\tif err != nil {"
            - "\t\tError(err)"
            - "\t}"
            - '}'
            - ""
            - func CommandResult(result engine.CommandResult, err error) {
            - "\tif err != nil {"
            - "\t\tError(err)"
            - "\t\treturn"
            - "\t}"
            - ""
            - "\tfor _, chk := range result.Checks {"
            - "\t\tlines := strings.Split(string(chk.Data), \"\\n\")"
            - "\t\tfor _, line := range lines {"
            - "\t\t\toutput(3, ansi.LightBlack+\"%8s:\"+ansi.Reset+\" %s\","
            - "\t\t\t\tchk.Check.Spec(), line)"
            - "\t\t}"
            - "\t}"
            - '}'
            - ""
            - // lockfile flow
            - func FileAccess(f string) { output(2, cSubtitle+"--> "+f+cReset) }
            - func Pass(s string)       { output(-1, cPass+"\n  ✔ "+s+"\n"+cReset)
              }
            - func Fail(s string)       { output(-1, cFail+"\n  ✘ "+s+"\n"+cReset)
              }
            - ""
            - // diff flow
            - func TestEdit(edit resultspecs.TestEdit) {
            - "\tc, prefix := colorByAction(edit.Action)"
            - "\toutput(0, c+prefix+\" ==> \"+edit.Name+cReset)"
            - '}'
            - ""
            - func CommandEdit(edit resultspecs.CommandEdit) {
            - "\tc, prefix := colorByAction(edit.Action)"
            - "\toutput(0, c+prefix+\" --> \"+edit.Name+cReset)"
            - '}'
            - ""
            - func CheckEdit(edit resultspecs.CheckEdit) {
            - "\tc, prefix := colorByAction(edit.Action)"
            - "\toutput(0, c+prefix+\"     \"+edit.Name+cReset)"
            - '}'
            - ""
            - func LineEdit(edit resultspecs.LineEdit) {
            - "\tc, prefix := colorByAction(edit.Action)"
            - "\toutput(0, c+prefix+\"       \"+edit.Line+cReset)"
            - '}'
            - ""
            - func colorByAction(action resultspecs.Action) (string, string) {
            - "\tswitch action {"
            - "\tcase resultspecs.Equal:"
            - "\t\treturn cEqual, \"   \""
            - "\tcase resultspecs.Added:"
            - "\t\treturn cAdded, \"+++\""
            - "\tcase resultspecs.Removed:"
            - "\t\treturn cRemoved, \"---\""
            - "\tcase resultspecs.InnerChanges:"
            - "\t\treturn cInnerChanges, \"   \""
            - "\tdefault:"
            - "\t\tpanic(\"bad edit action: \" + fmt.Sprint(action))"
            - "\t}"
            - '}'
            - '-----END funcs.go-----'
            - ""
            - '-----BEGIN print.go-----'
            - package p
            - ""
            - import (
            - "\t\"fmt\""
            - "\t\"os\""
            - "\t\"time\""
            - ""
            - "\t\"github.com/mgutz/ansi\""
            - )
            - ""
            - var ( // stylesheet :p
            - "\tcTitle    string"
            - "\tcTitleEm  string"
            - "\tcSubtitle string"
            - "\tcLowkey   string"
            - "\tcReset    string"
            - ""
            - "\tcAction string"
            - "\tcError  string"
            - "\tcPass   string"
            - "\tcFail   string"
            - ""
            - "\tcEqual        string"
            - "\tcAdded        string"
            - "\tcRemoved      string"
            - "\tcInnerChanges string"
            - ""
            - "\tstartTime time.Time"
            - "\tverbosity int"
            - )
            - ""
            - func init() { Configure(true, false, 1, 0) }
            - ""
            - func Verbosity() int { return verbosity }
            - ""
            - func Configure(color, trackTime bool, v int, q int) {
            - "\tverbosity = 1 + v - q"
            - "\tif trackTime {"
            - "\t\tstartTime = time.Now()"
            - "\t}"
            - ""
            - "\tif !color {"
            - "\t\tcTitle = \"\""
            - "\t\tcTitleEm = \"\""
            - "\t\tcSubtitle = \"\""
            - "\t\tcLowkey = \"\""
            - "\t\tcReset = \"\""
            - ""
            - "\t\tcAction = \"\""
            - "\t\tcError = \"\""
            - "\t\tcPass = \"\""
            - "\t\tcFail = \"\""
            - ""
            - "\t\tcEqual = \"\""
            - "\t\tcAdded = \"\""
            - "\t\tcRemoved = \"\""
            - "\t\tcInnerChanges = \"\""
            - ""
            - "\t} else {"
            - "\t\tcTitle = ansi.Magenta"
            - "\t\tcTitleEm = ansi.ColorCode(\"magenta+b\")"
            - "\t\tcSubtitle = ansi.Blue"
            - "\t\tcLowkey = ansi.LightBlack"
            - "\t\tcReset = ansi.Reset"
            - ""
            - "\t\tcAction = ansi.ColorCode(\"cyan+b\")"
            - "\t\tcError = ansi.Red"
            - "\t\tcPass = ansi.ColorCode(\"green+b\")"
            - "\t\tcFail = ansi.ColorCode(\"red+b\")"
            - ""
            - "\t\tcEqual = ansi.LightBlack"
            - "\t\tcAdded = ansi.Green"
            - "\t\tcRemoved = ansi.Red"
            - "\t\tcInnerChanges = ansi.LightBlack"
            - "\t}"
            - '}'
            - ""
            - func output(level int, s string, args ...interface{}) {
            - "\tif level >= verbosity {"
            - "\t\treturn"
            - "\t}"
            - ""
            - "\tif !startTime.IsZero() {"
            - "\t\tdur := time.Now().Sub(startTime)"
            - "\t\t_, _ = fmt.Fprintf(os.Stdout, \"%20s \", dur)"
            - "\t}"
            - ""
            - "\tif len(args) == 0 {"
            - "\t\t_, _ = os.Stdout.WriteString(s)"
            - "\t} else {"
            - "\t\t_, _ = os.Stdout.WriteString(fmt.Sprintf(s, args...))"
            - "\t}"
            - "\t_, _ = os.Stdout.WriteString(\"\\n\")"
            - '}'
            - '-----END print.go-----'
            - ""
- name: tests.yml \ Tests \ Env
  commands:
    - command: echo $YEAS_ITS
      checks:
        - name: exitcode
          data:
            - "0"
        - name: stdout
          data:
            - Working
        - name: stderr
          data:
            - ""
- name: tests.yml \ Tests \ Include/Exclude \ Just Include
  commands:
    - command: ./bin/smoke --no-color -l -i hello badtests.yml
      checks:
        - name: exitcode
          data:
            - "0"
        - name: stdout
          data:
            - badtests.yml \ hello
        - name: stderr
          data:
            - ""
    - command: ./bin/smoke --no-color -v -i hello badtests.yml
      checks:
        - name: exitcode
          data:
            - "1"
        - name: stdout
          data:
            - ≋≋> RUNNING TESTS
            - ==> badtests.yml \ hello
            - ≋≋> COMPARING LOCK FILE
            - '    ==> badtests.yml \ hello'
            - '--- --> echo extraneous'
            - '---     stdout'
            - '---       extraneous'
            - +++ --> echo missing
            - +++     stdout
            - +++       missing
            - ""
            - '  ✘ Changes Detected.'
        - name: stderr
          data:
            - ""
- name: tests.yml \ Tests \ Include/Exclude \ Just Exclude
  commands:
    - command: ./bin/smoke --no-color -l -x Head -x Tail badtests.yml
      checks:
        - name: exitcode
          data:
            - "0"
        - name: stdout
          data:
            - badtests.yml \ hello
        - name: stderr
          data:
            - ""
    - command: ./bin/smoke --no-color -v -x Head -x Tail badtests.yml
      checks:
        - name: exitcode
          data:
            - "1"
        - name: stdout
          data:
            - ≋≋> RUNNING TESTS
            - ==> badtests.yml \ hello
            - ≋≋> COMPARING LOCK FILE
            - '    ==> badtests.yml \ hello'
            - '--- --> echo extraneous'
            - '---     stdout'
            - '---       extraneous'
            - +++ --> echo missing
            - +++     stdout
            - +++       missing
            - ""
            - '  ✘ Changes Detected.'
        - name: stderr
          data:
            - ""
